<?xml version="1.0" encoding="UTF-8"?>
<?page title="ZK Fragment PWA Demo"?>
<?link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css"?>
<?link rel="stylesheet" type="text/css" href="css/FragmentDemo.css"?>
<?link rel="stylesheet" type="text/css" href="css/offline-theme-default-indicator.css"?>
<?meta http-equiv="X-UA-Compatible" content="IE=edge"?>
<?meta name="viewport" content="width=device-width, initial-scale=1"?>
<?meta name="theme-color" content="#007CA7"?>
<?link rel="manifest" href="manifest.json"?>
<?script src="static/offline.min.js"?>
<?script src="static/bundle.js"?>
<!--
FragmentDemo.zul

	Purpose:

	Description:

	History:
		Tue Nov  1 15:21:45 CST 2016, Created by wenninghsu

Copyright (C) 2016 Potix Corporation. All Rights Reserved.

-->
<nodom viewModel="@id('vm') @init('org.zkoss.fragment.demo.FragmentDemoVM')">
	<script>
		zk.afterMount(function () {
			var fgs = zk.Widget.getElementsById('fg');
			var fg = zk.$(fgs[fgs.length - 1]);
			fg.onOffline('command', function (name, args) {
				// console.log('[@command]', name, args);
				if (name == 'toggleEditMethod') {
					var exps = fg.load('exps');
					fg.save('editExp', exps[args.id]);
					fg.save('toggleEdit', true);
					return;
				}
				if (name == 'addExpense') {
					fg.save('toggleEdit', false);
					fg.save('editExp', {});
					return;
				}
				if (name == 'submitEditExpense') {
					var exps = fg.load('exps'),
						editExp = fg.load('editExp'),
						total = fg.load('total'),
						oldEditExp = exps[editExp.id];
					editExp.amount = parseInt(editExp.amount) || 0;
					exps[editExp.id] = editExp;
					fg.save('exps', exps);
					fg.save('toggleEdit', false);
					fg.save('editExp', {});
					fg.save('total', total - oldEditExp.amount + editExp.amount);
					return;
				}
				if (name == 'submitNewExpense') {
					var exps = fg.load('exps');
						newExp = fg.load('newExp'),
						total = fg.load('total');
					newExp.amount = parseInt(newExp.amount) || 0;
					exps.push({id: exps.length, date: newExp.date, category: newExp.category, amount: newExp.amount});
					fg.save('exps', exps);
					fg.save('newExp', {id: exps.length, date: newExp.date, category: '', amount: 0});
					fg.save('total', total + newExp.amount);
					return;
				}
			});
			fg.onOffline('save', function (key, val) {
				// console.log('[@save]', key, val);
				fg.save(key, val);
			});
			fg.onOffline('beforeRecover', function (packet) {
				packet['exps'] = fg.load('exps');
				packet['newExp'] = fg.load('newExp');
				packet['editExp'] = fg.load('editExp');
				packet['toggleEdit'] = fg.load('toggleEdit');
			});
		});
	</script>
	<fragment id="fg" recoverId="${vm.recoverId}"
		exps="@bind(vm.expenses)" toggleEdit="@bind(vm.toggleEdit)"
		newExp="@bind(vm.newExpense)" editExp="@bind(vm.editExpense)"
		total="@bind(vm.totalExpenses)"
		onRecover="@command('recover', vm=event.vm, packet=event.packet)"><![CDATA[
		<div class="container">
			<div>
				<h1 class="heading">ZK Client Binding with Fragment</h1>
			</div>
			<div class="row">
				<div class="col-xs-12 col-md-5 col-md-offset-1 list-group">
					<forEach items="@load(exps)" begin="0" end="" step="1" varStatus="s">
						<if test="@load(s.first)">
							<div class="headerFooter row list-group-item">
								<div class="col-xs-4">
									<span>Date</span>
								</div>
								<div class="col-xs-4">
									<span>Category</span>
								</div>
								<div class="col-xs-3">
									<span>Amount</span>
								</div>
								<div class="col-xs-1">
									<span>Edit</span>
								</div>
							</div>
						</if>
						<if test="@load(editExp.id != each.id)">
							<div class="eachrow row list-group-item" onClick="@command('toggleEditMethod', id = each.id)">
								<div class="col-xs-4">
									<span textContent="@load(each.date)"/>
								</div>
								<div class="col-xs-4">
									<span textContent="@load(each.category)"/>
								</div>
								<div class="col-xs-3">
									<span textContent="@load(each.amount)"/>
								</div>
								<div class="col-xs-1">
									<span class="glyphicon glyphicon-edit"/>
								</div>
							</div>
						</if>
						<if test="@load(editExp.id == each.id)">
							<div class="row list-group-item" onClick="@command('toggleEditMethod', id = each.id)" style="background-color: #ccc;">
								<div class="col-xs-4">
									<span textContent="@load(each.date)"/>
								</div>
								<div class="col-xs-4">
									<span textContent="@load(each.category)"/>
								</div>
								<div class="col-xs-3">
									<span textContent="@load(each.amount)"/>
								</div>
								<div class="col-xs-1">
									<span class="glyphicon glyphicon-edit"/>
								</div>
							</div>
						</if>
						<if test="@load(s.last)">
							<div class="headerFooter row list-group-item">
								<div class="col-xs-4">
									<span>Total</span>
								</div>
								<div class="col-xs-4">
								</div>
								<div class="col-xs-3">
									<span textContent="@load(total)"/>
								</div>
								<div class="col-xs-1">
								</div>
							</div>
						</if>
					</forEach>
				</div>
				<div class="col-xs-11 col-xs-offset-1 col-md-5">
					<if test="@load(toggleEdit == false)">
						<form class="form-horizontal">
							<div class="form-group">
								<label class="col-xs-2 control-label">Date</label>
								<div class="col-xs-10">
									<p class="form-control-static"><span textContent="@load(newExp.date)"/></p>
								</div>
							</div>
							<div class="form-group">
								<label for="inputPassword" class="col-xs-2 control-label">Category</label>
								<div class="col-xs-10">
									<input type="text" class="form-control" placeholder="category" value="@bind(newExp.category)"/>
								</div>
							</div>
							<div class="form-group">
								<label for="inputPassword" class="col-xs-2 control-label">Amount</label>
								<div class="col-xs-10">
									<input type="text" class="form-control" placeholder="amount" value="@bind(newExp.amount) @jsvalidator('validateNumber')"/>
									<span textContent="@load(vmsgs['number_required'])"/>
								</div>
							</div>
						</form>
						<button class="formBtn btn btn-primary" onClick="@command('submitNewExpense')">ADD</button>
					</if>
					<if test="@load(toggleEdit == true)">
						<form class="form-horizontal">
							<div class="form-group">
								<label class="col-xs-2 control-label">Date</label>
								<div class="col-xs-10">
									<p class="form-control-static"><span textContent="@bind(editExp.date)"/></p>
								</div>
							</div>
							<div class="form-group">
								<label for="inputPassword" class="col-xs-2 control-label">Category</label>
								<div class="col-xs-10">
									<input type="text" class="form-control" placeholder="category" value="@bind(editExp.category)"/>
								</div>
							</div>
							<div class="form-group">
								<label for="inputPassword" class="col-xs-2 control-label">Amount</label>
								<div class="col-xs-10">
									<input type="text" class="form-control" placeholder="amount" value="@bind(editExp.amount) @jsvalidator('validateNumber2')"/>
									<span textContent="@load(vmsgs['number_required2'])"/>
								</div>
							</div>
						</form>
						<button class="formBtn btn btn-primary" onClick="@command('submitEditExpense')">EDIT</button>
						<button class="formBtn btn btn-danger" onClick="@command('addExpense')">CANCEL</button>
					</if>
				</div>
			</div>
		</div>
	]]></fragment>
</nodom>
